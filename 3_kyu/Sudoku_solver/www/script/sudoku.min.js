function generateRandomSudokuBoard(){let o=[[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0]];for(;;){for(let e=0;e<9;e++)for(let r=0;r<9;r++){if(Math.random()>.3)o[e][r]=0;else{let t=1;do{t=Math.floor(10*Math.random())}while(!checkIfCellIsValid(t,e,r,o));o[e][r]=t}}try{const e=o.map(function(o){return o.slice(0)});return sudoku(o),e}catch(o){console.log("invalid board")}}return o}function sudoku(o){const e={};for(let r=0;r<o.length;r++)for(let t=0;t<o[r].length;t++)e[r]||(e[r]={}),0==o[r][t]?e[r][t]=!1:e[r][t]=!0;let r=0,t=0;for(;9!=r;){if(!e[r][t]){for(o[r][t]++;o[r][t]<10&&!checkIfCellIsValid(o[r][t],r,t,o);)o[r][t]++;if(10==o[r][t]){o[r][t]=0;do{--t<0&&(r--,t=8)}while(e[r][t]);continue}}9==++t&&(r++,t=0)}return o}function checkIfCellIsValid(o,e,r,t){let l=0;for(;l<9;l++)if(t[e][l]==o&&l!=r)return!1;for(l=0;l<9;l++)if(t[l][r]==o&&l!=e)return!1;const n=Math.floor(e/3),f=3*n+3,i=Math.floor(r/3),u=3*i+3;for(let l=3*n;l<f;l++)for(let n=3*i;n<u;n++)if(l!=e&&n!=r&&t[l][n]==o)return!1;return!0}